{"version":3,"sources":["dolphin.svg","Images/golden-globe.svg","Images/silver-cup.svg","Images/bronze-trophy.svg","components/UserInput.jsx","components/Matrixsize.jsx","components/APIKEY.js","components/Authentication.jsx","components/Navbar.jsx","components/Square.jsx","components/TicTacToe.jsx","components/Game.jsx","components/Scoreboard.jsx","components/Register.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","UserInput","className","style","color","onSubmit","e","props","htmlFor","name","type","onChange","onInput","Component","Matrixsize","state","matrixSize","disabled","blue_username","red_username","red_id","blue_id","handleUpdate","target","value","setState","presentState","this","id","placeholder","to","pathname","pointerEvents","apiKey","api","Axios","create","baseURL","APIKEY","AuthenticationPage","blue_password","red_password","blue_verified","red_verified","handleInput","event","handleSubmit","team","username","password","get","then","res","found","data","forEach","player","_id","window","alert","preventDefault","Navbar","src","dolphin","alt","Square","x","y","side","content","endGame","squareStyle","width","height","fontSize","squareClick","textContent","xando","innerHTML","onClick","dim","TicTacToe","dimensions","coord","turn","values","innerContainer","outerContainer","handleWinner","count","diag1","diag2","win","i","row","col","xy","onWinner","handleClick","coordinates","onChangeTurn","Number","d","val","j","push","map","index","key","GamePage","round","redPlayer","bluePlayer","status","redScore","blueScore","handleStatus","updateWinnerScore","winner","redData","blueData","location","console","log","scores","total_matches","total_score","put","handlePlay","reload","handleEndGame","history","handleTurn","rand","Math","floor","random","class","Scoreboard","align","borderWidth","goldenglobe","silvercup","bronzecup","Register","handleRegister","post","catch","error","backgroundColor","App","path","exact","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.4a200619.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dolphin.8592cf61.svg\";","module.exports = __webpack_public_path__ + \"static/media/golden-globe.d4ac01cf.svg\";","module.exports = __webpack_public_path__ + \"static/media/silver-cup.ea73e7af.svg\";","module.exports = __webpack_public_path__ + \"static/media/bronze-trophy.14587b5a.svg\";","import React, { Component } from \"react\";\r\nimport \"../styles/UserInput.css\";\r\n\r\nclass UserInput extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <section>\r\n          <div className=\"flex-row1\">\r\n            <i style={{ color: \"white\" }} className=\"fab fa-joomla fa-9x\"></i>\r\n            <i style={{ color: \"white\" }} className=\"fab fa-slack fa-9x\"></i>\r\n          </div>\r\n\r\n          <div className=\"wave wave1\"></div>\r\n          <div className=\"wave wave2\"></div>\r\n          <div className=\"wave wave3\"></div>\r\n          <div className=\"wave wave4\"></div>\r\n        </section>\r\n        <div className=\"flex-row\">\r\n          <div className=\"userinput-field\">\r\n            <form\r\n              className=\"blueteam-ui\"\r\n              onSubmit={(e) => this.props.onSubmit(e, \"blue\")}\r\n            >\r\n              <label htmlFor=\"username\">Username</label>\r\n              <input\r\n                name=\"blue_username\"\r\n                type=\"text\"\r\n                onChange={(e) => this.props.onInput(e)}\r\n              />\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input\r\n                name=\"blue_password\"\r\n                type=\"password\"\r\n                onChange={(e) => this.props.onInput(e)}\r\n              />\r\n              <button className=\"verify-btn\" type=\"submit\">\r\n                Verify\r\n              </button>\r\n            </form>\r\n            <form\r\n              className=\"redteam-ui\"\r\n              onSubmit={(e) => this.props.onSubmit(e, \"red\")}\r\n            >\r\n              <label htmlFor=\"username\">Username</label>\r\n              <input\r\n                name=\"red_username\"\r\n                type=\"text\"\r\n                onChange={(e) => this.props.onInput(e)}\r\n              />\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input\r\n                name=\"red_password\"\r\n                type=\"password\"\r\n                onChange={(e) => this.props.onInput(e)}\r\n              />\r\n              <button className=\"verify-btn\" type=\"submit\">\r\n                Verify\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserInput;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../styles/Matrixsize.css\";\r\n\r\nclass Matrixsize extends Component {\r\n  state = {\r\n    matrixSize: 3,\r\n    disabled: true,\r\n    blue_username: \"\",\r\n    red_username: \"\",\r\n    red_id: \"\",\r\n    blue_id: \"\",\r\n  };\r\n\r\n  handleUpdate = (e) => {\r\n    const matrixSize = e.target.value;\r\n    this.setState({ matrixSize });\r\n  };\r\n\r\n  componentWillReceiveProps(props) {\r\n    const {\r\n      blue_username,\r\n      red_username,\r\n      disabled,\r\n      red_id,\r\n      blue_id,\r\n    } = props.presentState;\r\n    this.setState({ disabled, red_username, blue_username, red_id, blue_id });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"flex-row\">\r\n        <form className=\"matrix\">\r\n          <input\r\n            id=\"matrixsize\"\r\n            type=\"number\"\r\n            name=\"MatrixSize\"\r\n            placeholder=\"Matrix Size\"\r\n            className=\"matrix-input\"\r\n            onChange={this.handleUpdate}\r\n          />\r\n          <Link\r\n            to={{\r\n              pathname: \"/game\",\r\n              state: {\r\n                ...this.state,\r\n              },\r\n            }}\r\n            className=\"submit\"\r\n            style={{\r\n              pointerEvents: this.state.disabled === true ? \"none\" : \"auto\",\r\n            }}\r\n          >\r\n            Start Game\r\n          </Link>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Matrixsize;\r\n","let apiKey = \"39e7c9c2ce084cbdaa7bc65f5589ea6d\";\r\n\r\nexport default apiKey;\r\n","import React, { Component } from \"react\";\r\nimport UserInput from \"./UserInput\";\r\nimport Matrixsize from \"./Matrixsize\";\r\nimport \"../styles/Authentication.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport APIKEY from \"./APIKEY\";\r\n\r\nconst api = Axios.create({\r\n  baseURL: \"https://crudcrud.com/api/\" + APIKEY,\r\n});\r\n\r\nclass AuthenticationPage extends Component {\r\n  state = {\r\n    blue_username: \"\",\r\n    blue_password: \"\",\r\n    red_username: \"\",\r\n    red_password: \"\",\r\n    blue_verified: false,\r\n    red_verified: false,\r\n    disabled: true,\r\n    red_id: \"\",\r\n    blue_id: \"\",\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    if (this.state.disabled === true) {\r\n      if (\r\n        this.state.blue_verified === true &&\r\n        this.state.red_verified === true\r\n      ) {\r\n        this.setState({ disabled: false });\r\n      }\r\n    }\r\n  }\r\n\r\n  handleInput = (event) => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (event, team) => {\r\n    const username = this.state[team + \"_username\"];\r\n    const password = this.state[team + \"_password\"];\r\n    api.get(\"/\" + team).then((res) => {\r\n      let found = false;\r\n      const players = res.data;\r\n      players.forEach((player) => {\r\n        if (player.username === username && player.password === password) {\r\n          found = true;\r\n          this.setState({ [team + \"_id\"]: player._id });\r\n        }\r\n      });\r\n      if (found === true) {\r\n        this.setState({ [team + \"_verified\"]: true });\r\n        window.alert(team + \" team authentication successful!\");\r\n      } else {\r\n        window.alert(team + \" team authentication failed!\");\r\n      }\r\n    });\r\n    // console.log(this.state);\r\n    event.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"authBody\">\r\n        <UserInput onInput={this.handleInput} onSubmit={this.handleSubmit} />\r\n        <Link to=\"/register\">Register</Link>\r\n        <Matrixsize presentState={this.state} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AuthenticationPage;\r\n","import React, { Component } from \"react\";\r\nimport dolphin from \"../dolphin.svg\";\r\nimport \"../styles/Navbar.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"navbar\">\r\n        <div className=\"navbarBrand\">\r\n          <img className=\"logo\" src={dolphin} alt=\"logo\" />\r\n          <span className=\"title\">Marine Games</span>\r\n        </div>\r\n        <div className=\"scoreboard\">\r\n          {/* <img className=\"scoreImage\" src={scorePic} alt=\"score-vector-icon\" /> */}\r\n          <Link to=\"/scoreboard\" className=\"scoretitle\">\r\n            Scoreboard\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\r\nimport \"../styles/Square.css\";\r\n\r\nclass Square extends Component {\r\n  state = {\r\n    x: 0,\r\n    y: 0,\r\n    side: 0,\r\n    content: null,\r\n    endGame: false,\r\n  };\r\n\r\n  componentWillReceiveProps(props) {\r\n    this.setState({ endGame: props.endGame });\r\n  }\r\n\r\n  squareStyle = {\r\n    width: 0,\r\n    height: 0,\r\n    fontSize: 0,\r\n  };\r\n\r\n  squareClick = (event) => {\r\n    const { x, y, endGame } = this.state;\r\n    let value = event.target.textContent;\r\n    if (value !== \"X\" && value !== \"O\" && endGame === false) {\r\n      const xando = this.props.player === \"X\" ? \"X\" : \"O\";\r\n      event.target.innerHTML =\r\n        \"<div class='\" + xando + \"'>\" + this.props.player + \"</div>\";\r\n      this.props.onClick({ x: x, y: y });\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    //it is aceptable to directly change the state only in constructor else setState is prefered\r\n    const { x, y, dim, width } = this.props;\r\n    this.state.x = x;\r\n    this.state.y = y;\r\n    let side = (0.97 * width) / dim;\r\n\r\n    this.state.side = side;\r\n    this.squareStyle.width = side;\r\n    this.squareStyle.height = side;\r\n    this.squareStyle.fontSize = side / 2;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        style={this.squareStyle}\r\n        className=\"square\"\r\n        onClick={(e) => {\r\n          this.squareClick(e);\r\n        }}\r\n      ></div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Square;\r\n","import React, { Component } from \"react\";\r\nimport Square from \"./Square\";\r\nimport \"../styles/tttstyle.css\";\r\n\r\nclass TicTacToe extends Component {\r\n  state = {\r\n    dimensions: 3,\r\n    width: 450,\r\n    coord: [],\r\n    turn: \"X\",\r\n    values: [],\r\n    endGame: false,\r\n  };\r\n\r\n  style = {\r\n    innerContainer: {\r\n      width: this.state.width,\r\n      height: this.state.width,\r\n    },\r\n    outerContainer: {\r\n      width: this.state.width * 1.01,\r\n      height: this.state.width * 1.01,\r\n    },\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state.dimensions = Number(this.props.dimensions);\r\n    let d = this.state.dimensions;\r\n    for (let i = 0; i < d; i++) {\r\n      let val = [];\r\n      for (let j = 0; j < d; j++) {\r\n        this.state.coord.push([i, j]);\r\n        val.push(0);\r\n      }\r\n      this.state.values.push(val);\r\n    }\r\n    this.state.turn = this.props.turn;\r\n  }\r\n\r\n  handleWinner = () => {\r\n    let { values, dimensions } = this.state;\r\n    let count = 0;\r\n    let diag1 = [0, 0];\r\n    let diag2 = [0, 0];\r\n    let win = null;\r\n    for (var i = 0; i < dimensions; i++) {\r\n      let row = [0, 0];\r\n      let col = [0, 0];\r\n      for (var xy = 0; xy < dimensions; xy++) {\r\n        row[0] = values[i][xy] === \"X\" ? row[0] + 1 : row[0];\r\n        row[1] = values[i][xy] === \"O\" ? row[1] + 1 : row[1];\r\n        col[0] = values[xy][i] === \"X\" ? col[0] + 1 : col[0];\r\n        col[1] = values[xy][i] === \"O\" ? col[1] + 1 : col[1];\r\n        if (values[i][xy] !== 0) {\r\n          count++;\r\n        }\r\n      }\r\n\r\n      if (row[0] === dimensions || col[0] === dimensions) {\r\n        win = \"X\";\r\n        break;\r\n      } else if (row[1] === dimensions || col[1] === dimensions) {\r\n        win = \"O\";\r\n        break;\r\n      }\r\n\r\n      diag1[0] = values[i][i] === \"X\" ? diag1[0] + 1 : diag1[0];\r\n      diag1[1] = values[i][i] === \"O\" ? diag1[1] + 1 : diag1[1];\r\n      diag2[0] =\r\n        values[i][dimensions + i - 1] === \"X\" ? diag2[0] + 1 : diag2[0];\r\n      diag2[1] =\r\n        values[i][dimensions + i - 1] === \"O\" ? diag2[1] + 1 : diag2[1];\r\n    }\r\n\r\n    if (diag1[0] === dimensions || diag2[0] === dimensions) {\r\n      win = \"X\";\r\n    } else if (diag1[1] === dimensions || diag2[1] === dimensions) {\r\n      win = \"O\";\r\n    }\r\n\r\n    if (win === \"X\") {\r\n      this.props.onWinner(\"X\");\r\n      this.setState({ endGame: true });\r\n    } else if (win === \"O\") {\r\n      this.props.onWinner(\"O\");\r\n      this.setState({ endGame: true });\r\n    } else if (count === dimensions * dimensions) {\r\n      this.props.onWinner(\"D\");\r\n      this.setState({ endGame: true });\r\n    }\r\n  };\r\n\r\n  handleClick = (coordinates) => {\r\n    if (!this.state.endGame) {\r\n      const { x, y } = coordinates;\r\n      let { values, turn } = this.state;\r\n      values[x][y] = turn;\r\n      turn = turn === \"X\" ? \"O\" : \"X\";\r\n      this.setState({ values: values, turn: turn }, () => {\r\n        this.props.onChangeTurn(this.state.turn);\r\n      });\r\n      this.handleWinner();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"outer-container\" style={this.style.outerContainer}>\r\n        <div className=\"inner-container\" style={this.style.innerContainer}>\r\n          {this.state.coord.map((d, index) => {\r\n            return (\r\n              <Square\r\n                onClick={this.handleClick}\r\n                player={this.state.turn}\r\n                key={index}\r\n                x={d[0]}\r\n                y={d[1]}\r\n                dim={this.state.dimensions}\r\n                width={this.state.width}\r\n                endGame={this.state.endGame}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TicTacToe;\r\n","import React, { Component } from \"react\";\r\nimport Navbar from \"./Navbar\";\r\nimport Axios from \"axios\";\r\nimport TicTacToe from \"./TicTacToe\";\r\nimport \"../styles/Game.css\";\r\nimport APIKEY from \"./APIKEY\";\r\n\r\nconst api = Axios.create({ baseURL: \"https://crudcrud.com/api/\" + APIKEY });\r\n\r\nclass GamePage extends Component {\r\n  state = {\r\n    dimensions: 3,\r\n    round: 1,\r\n    redPlayer: \"\",\r\n    bluePlayer: \"\",\r\n    turn: \"\",\r\n    status: \"\",\r\n    endGame: false,\r\n    redScore: 0,\r\n    blueScore: 0,\r\n  };\r\n\r\n  handleStatus = () => {\r\n    if (!this.state.endGame) {\r\n      const { turn, redPlayer, bluePlayer } = this.state;\r\n      if (turn === \"X\") {\r\n        this.setState({ status: \"It's \" + redPlayer + \"'s turn\" });\r\n      } else if (turn === \"O\") {\r\n        this.setState({ status: \"It's \" + bluePlayer + \"'s turn\" });\r\n      }\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { red_id, blue_id } = this.props.location.state;\r\n    //Updating scores\r\n    api.get(\"/red/\" + red_id).then((res) => {\r\n      this.setState({ redScore: res.data.total_score });\r\n    });\r\n    api.get(\"/blue/\" + blue_id).then((res) => {\r\n      this.setState({ blueScore: res.data.total_score });\r\n    });\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    const { matrixSize, red_username, blue_username } = props.location.state;\r\n    this.state.dimensions = matrixSize;\r\n    this.state.redPlayer = red_username;\r\n    this.state.bluePlayer = blue_username;\r\n    //random function\r\n    const rand = Math.floor((Math.random() * 10) % 2);\r\n    if (rand === 1) {\r\n      this.state.status = \"It's \" + blue_username + \"'s turn\";\r\n      this.state.turn = \"O\";\r\n    } else if (rand === 0) {\r\n      this.state.status = \"It's \" + red_username + \"'s turn\";\r\n      this.state.turn = \"X\";\r\n    }\r\n  }\r\n\r\n  updateWinnerScore = (winner) => {\r\n    const { red_id, blue_id } = this.props.location.state;\r\n    let redData, blueData;\r\n    api.get(\"/red/\" + red_id).then((res) => {\r\n      redData = res.data;\r\n      console.log(\"red data\", res);\r\n      redData.scores.push(winner === \"X\" ? 1 : 0);\r\n      redData.total_matches++;\r\n      redData.total_score =\r\n        winner === \"X\" ? redData.total_score + 1 : redData.total_score;\r\n      console.log(redData);\r\n    });\r\n    api.get(\"/blue/\" + blue_id).then((res) => {\r\n      blueData = res.data;\r\n      console.log(\"blue data\", res);\r\n      blueData.scores.push(winner === \"O\" ? 1 : 0);\r\n      blueData.total_matches++;\r\n      blueData.total_score =\r\n        winner === \"O\" ? blueData.total_score + 1 : blueData.total_score;\r\n    });\r\n\r\n    api.put(\"/red/\" + red_id, redData).then((res) => console.log(res));\r\n    api.put(\"/blue/\" + blue_id, blueData).then((res) => console.log(res));\r\n  };\r\n\r\n  handlePlay = () => {\r\n    window.location.reload();\r\n  };\r\n\r\n  handleEndGame = () => {\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  handleWinner = (winner) => {\r\n    const { redPlayer, bluePlayer } = this.state;\r\n    if (winner === \"D\") {\r\n      console.log(\"It's a draw!\");\r\n      this.setState({ status: \"It's a draw!\", endGame: true });\r\n    } else {\r\n      console.log(\"The winner is \" + winner);\r\n      if (winner === \"X\") {\r\n        this.setState({\r\n          status: \"The winner is \" + redPlayer,\r\n          endGame: true,\r\n          redScore: this.state.redScore + 1,\r\n        });\r\n      } else if (winner === \"O\") {\r\n        this.setState({\r\n          status: \"The winner is \" + bluePlayer,\r\n          endGame: true,\r\n          blueScore: this.state.blueScore + 1,\r\n        });\r\n      }\r\n    }\r\n    this.updateWinnerScore(winner);\r\n  };\r\n\r\n  handleTurn = (turn) => {\r\n    this.setState({ turn }, () => {\r\n      this.handleStatus();\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"gameBody\">\r\n        <Navbar />\r\n        {/* Match score here */}\r\n        <div className=\"matchscore\">\r\n          <div className=\"red-col\">\r\n            <i class=\"fab fa-slack fa-5x\"></i>\r\n            <div className=\"redscore\" width=\"50vw\" height=\"50vh\">\r\n              <div className=\"player-name\">{this.state.redPlayer}</div>\r\n              <div className=\"red-player-score\">{this.state.redScore}</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"blue-col\">\r\n            <div className=\"bluescore\" width=\"50vw\" height=\"50vh\">\r\n              <div className=\"blue-player-score\">{this.state.blueScore}</div>\r\n              <div className=\"player-name\">{this.state.bluePlayer}</div>\r\n            </div>\r\n            <i class=\"fab fa-joomla fa-5x\"></i>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"layout\">\r\n          <TicTacToe\r\n            turn={this.state.turn}\r\n            dimensions={this.state.dimensions}\r\n            onWinner={this.handleWinner}\r\n            onChangeTurn={this.handleTurn}\r\n          />\r\n          <div className=\"status-container\">\r\n            <div className=\"status\">{this.state.status}</div>\r\n            <p>{`Round ${this.state.round}`}</p>\r\n            <div>\r\n              <button className=\"btn\" onClick={() => this.handlePlay()}>\r\n                Play Again\r\n              </button>\r\n              <button className=\"btn\" onClick={() => this.handleEndGame()}>\r\n                End Game\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GamePage;\r\n","import React, { Component } from \"react\";\r\nimport \"../styles/Scoreboard.css\";\r\nimport goldenglobe from \"../Images/golden-globe.svg\";\r\nimport silvercup from \"../Images/silver-cup.svg\";\r\nimport bronzecup from \"../Images/bronze-trophy.svg\";\r\n\r\nclass Scoreboard extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div className=\"leaderboardContainer\">\r\n        <div className=\"thead\">\r\n          <div className=\"rowline\">LEADERBOARD</div>\r\n        </div>\r\n        <table className=\"tableboard\" align=\"center\">\r\n          <tbody>\r\n            <tr className=\"rowline\" style={{ borderWidth: \"5px\" }}>\r\n              <th className=\"col1\">\r\n                <img src={goldenglobe} alt=\"React Logo\" width=\"40vw\"></img>\r\n              </th>\r\n              <td className=\"col\">Yash Prasad</td>\r\n            </tr>\r\n            <tr className=\"rowline\">\r\n              <th className=\"col2\">\r\n                <img src={silvercup} alt=\"React Logo\" width=\"40vw\"></img>\r\n              </th>\r\n              <td className=\"col\">Vaibhav Prasad</td>\r\n            </tr>\r\n            <tr className=\"rowline\">\r\n              <th className=\"col3\">\r\n                <img src={bronzecup} alt=\"React Logo\" width=\"40vw\"></img>\r\n              </th>\r\n              <td className=\"col\">Nihar Patel</td>\r\n            </tr>\r\n            <tr className=\"rowline\">\r\n              <th className=\"col\">4</th>\r\n              <td className=\"col\">Sai Teja</td>\r\n            </tr>\r\n            <tr className=\"rowline\">\r\n              <th className=\"col\">5</th>\r\n              <td className=\"col\">Sampreet</td>\r\n            </tr>\r\n            <tr className=\"rowline\">\r\n              <th className=\"col\">6</th>\r\n              <td className=\"col\">Ritvik Gupta</td>\r\n            </tr>\r\n            <tr className=\"rowline\">\r\n              <th className=\"col\">7</th>\r\n              <td className=\"col\">Chirag Agrawal</td>\r\n            </tr>\r\n            <tr className=\"rowline\">\r\n              <th className=\"col\">8</th>\r\n              <td className=\"col\">Akshith</td>\r\n            </tr>\r\n            <tr className=\"rowline\">\r\n              <th className=\"col\">9</th>\r\n              <td className=\"col\">Hemendra</td>\r\n            </tr>\r\n            <tr className=\"rowline\">\r\n              <th className=\"col\">10</th>\r\n              <td className=\"col\">Khushi Patel</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Scoreboard;\r\n","import React, { Component } from \"react\";\r\nimport \"../styles/Register.css\";\r\nimport Axios from \"axios\";\r\nimport APIKEY from \"./APIKEY\";\r\n\r\nconst api = Axios.create({ baseURL: \"https://crudcrud.com/api/\" + APIKEY });\r\n\r\nclass Register extends Component {\r\n  state = {\r\n    username: \"\",\r\n    password: \"\",\r\n    team: \"\",\r\n  };\r\n\r\n  handleInput = (event) => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleRegister = (event) => {\r\n    const { username, password, team } = this.state;\r\n    const data = {\r\n      username: username,\r\n      password: password,\r\n      team: team,\r\n      scores: [],\r\n      total_matches: 0,\r\n      total_score: 0,\r\n    };\r\n    api\r\n      .post(\"/\" + team, data)\r\n      .then((res) => {\r\n        window.alert(\"Successfully registered!, Now go and conquer the field!\");\r\n        this.props.history.push(\"/\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    event.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"register\">\r\n        <form className=\"input-field\" onSubmit={this.handleSubmit}>\r\n          <label htmlFor=\"username\">Username</label>\r\n\r\n          <input\r\n            name=\"username\"\r\n            type=\"text\"\r\n            onChange={(e) => this.handleInput(e)}\r\n          />\r\n\r\n          <label htmlFor=\"password\">Password</label>\r\n\r\n          <input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            onChange={(e) => this.handleInput(e)}\r\n          />\r\n          <div className=\"team-btns\">\r\n            <div\r\n              className=\"blue team-btn\"\r\n              style={{ backgroundColor: this.state.team === \"blue\" && \"white\" }}\r\n              onClick={() => this.setState({ team: \"blue\" })}\r\n            >\r\n              Blue Team\r\n            </div>\r\n            <div\r\n              className=\"red team-btn\"\r\n              style={{ backgroundColor: this.state.team === \"red\" && \"white\" }}\r\n              onClick={() => this.setState({ team: \"red\" })}\r\n            >\r\n              Red Team\r\n            </div>\r\n          </div>\r\n\r\n          <button\r\n            onClick={(event) => {\r\n              this.handleRegister(event);\r\n            }}\r\n            className=\"register-btn\"\r\n          >\r\n            Register\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport AuthenticationPage from \"./components/Authentication\";\nimport GamePage from \"./components/Game\";\nimport Scoreboard from \"./components/Scoreboard\";\nimport Register from \"./components/Register\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact component={AuthenticationPage} />\n          <Route path=\"/game\" component={GamePage} />\n          <Route path=\"/scoreboard\" component={Scoreboard} />\n          <Route path=\"/register\" component={Register} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}